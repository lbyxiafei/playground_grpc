// source: branch.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() { return this || window || global || self || Function('return this')(); }).call(null);

goog.exportSymbol('proto.GrpcBranch.BranchLoadType', null, global);
goog.exportSymbol('proto.GrpcBranch.BranchReply', null, global);
goog.exportSymbol('proto.GrpcBranch.BranchRequest', null, global);
goog.exportSymbol('proto.GrpcBranch.BranchTypes', null, global);
goog.exportSymbol('proto.GrpcBranch.ColumnMetadata', null, global);
goog.exportSymbol('proto.GrpcBranch.ColumnType', null, global);
goog.exportSymbol('proto.GrpcBranch.FilterEntry', null, global);
goog.exportSymbol('proto.GrpcBranch.FilterModels', null, global);
goog.exportSymbol('proto.GrpcBranch.FilterOperation', null, global);
goog.exportSymbol('proto.GrpcBranch.FilterType', null, global);
goog.exportSymbol('proto.GrpcBranch.Row', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.GrpcBranch.BranchRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.GrpcBranch.BranchRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.GrpcBranch.BranchRequest.displayName = 'proto.GrpcBranch.BranchRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.GrpcBranch.BranchReply = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.GrpcBranch.BranchReply.repeatedFields_, null);
};
goog.inherits(proto.GrpcBranch.BranchReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.GrpcBranch.BranchReply.displayName = 'proto.GrpcBranch.BranchReply';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.GrpcBranch.Row = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.GrpcBranch.Row.repeatedFields_, null);
};
goog.inherits(proto.GrpcBranch.Row, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.GrpcBranch.Row.displayName = 'proto.GrpcBranch.Row';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.GrpcBranch.FilterModels = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.GrpcBranch.FilterModels, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.GrpcBranch.FilterModels.displayName = 'proto.GrpcBranch.FilterModels';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.GrpcBranch.FilterEntry = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.GrpcBranch.FilterEntry.repeatedFields_, null);
};
goog.inherits(proto.GrpcBranch.FilterEntry, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.GrpcBranch.FilterEntry.displayName = 'proto.GrpcBranch.FilterEntry';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.GrpcBranch.ColumnMetadata = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.GrpcBranch.ColumnMetadata, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.GrpcBranch.ColumnMetadata.displayName = 'proto.GrpcBranch.ColumnMetadata';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.GrpcBranch.BranchRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.GrpcBranch.BranchRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.GrpcBranch.BranchRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.GrpcBranch.BranchRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: msg.getId_asB64(),
    type: jspb.Message.getFieldWithDefault(msg, 2, 0),
    referenceVersion: jspb.Message.getFieldWithDefault(msg, 3, 0),
    query: (f = msg.getQuery()) && proto.GrpcBranch.FilterModels.toObject(includeInstance, f),
    loadType: jspb.Message.getFieldWithDefault(msg, 5, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.GrpcBranch.BranchRequest}
 */
proto.GrpcBranch.BranchRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.GrpcBranch.BranchRequest;
  return proto.GrpcBranch.BranchRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.GrpcBranch.BranchRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.GrpcBranch.BranchRequest}
 */
proto.GrpcBranch.BranchRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {!proto.GrpcBranch.BranchTypes} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setReferenceVersion(value);
      break;
    case 4:
      var value = new proto.GrpcBranch.FilterModels;
      reader.readMessage(value,proto.GrpcBranch.FilterModels.deserializeBinaryFromReader);
      msg.setQuery(value);
      break;
    case 5:
      var value = /** @type {!proto.GrpcBranch.BranchLoadType} */ (reader.readEnum());
      msg.setLoadType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.GrpcBranch.BranchRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.GrpcBranch.BranchRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.GrpcBranch.BranchRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.GrpcBranch.BranchRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getReferenceVersion();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getQuery();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.GrpcBranch.FilterModels.serializeBinaryToWriter
    );
  }
  f = message.getLoadType();
  if (f !== 0.0) {
    writer.writeEnum(
      5,
      f
    );
  }
};


/**
 * optional bytes id = 1;
 * @return {!(string|Uint8Array)}
 */
proto.GrpcBranch.BranchRequest.prototype.getId = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes id = 1;
 * This is a type-conversion wrapper around `getId()`
 * @return {string}
 */
proto.GrpcBranch.BranchRequest.prototype.getId_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getId()));
};


/**
 * optional bytes id = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getId()`
 * @return {!Uint8Array}
 */
proto.GrpcBranch.BranchRequest.prototype.getId_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getId()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.GrpcBranch.BranchRequest} returns this
 */
proto.GrpcBranch.BranchRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional BranchTypes type = 2;
 * @return {!proto.GrpcBranch.BranchTypes}
 */
proto.GrpcBranch.BranchRequest.prototype.getType = function() {
  return /** @type {!proto.GrpcBranch.BranchTypes} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.GrpcBranch.BranchTypes} value
 * @return {!proto.GrpcBranch.BranchRequest} returns this
 */
proto.GrpcBranch.BranchRequest.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional int32 reference_version = 3;
 * @return {number}
 */
proto.GrpcBranch.BranchRequest.prototype.getReferenceVersion = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.GrpcBranch.BranchRequest} returns this
 */
proto.GrpcBranch.BranchRequest.prototype.setReferenceVersion = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional FilterModels query = 4;
 * @return {?proto.GrpcBranch.FilterModels}
 */
proto.GrpcBranch.BranchRequest.prototype.getQuery = function() {
  return /** @type{?proto.GrpcBranch.FilterModels} */ (
    jspb.Message.getWrapperField(this, proto.GrpcBranch.FilterModels, 4));
};


/**
 * @param {?proto.GrpcBranch.FilterModels|undefined} value
 * @return {!proto.GrpcBranch.BranchRequest} returns this
*/
proto.GrpcBranch.BranchRequest.prototype.setQuery = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.GrpcBranch.BranchRequest} returns this
 */
proto.GrpcBranch.BranchRequest.prototype.clearQuery = function() {
  return this.setQuery(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.GrpcBranch.BranchRequest.prototype.hasQuery = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional BranchLoadType load_type = 5;
 * @return {!proto.GrpcBranch.BranchLoadType}
 */
proto.GrpcBranch.BranchRequest.prototype.getLoadType = function() {
  return /** @type {!proto.GrpcBranch.BranchLoadType} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {!proto.GrpcBranch.BranchLoadType} value
 * @return {!proto.GrpcBranch.BranchRequest} returns this
 */
proto.GrpcBranch.BranchRequest.prototype.setLoadType = function(value) {
  return jspb.Message.setProto3EnumField(this, 5, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.GrpcBranch.BranchReply.repeatedFields_ = [1,2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.GrpcBranch.BranchReply.prototype.toObject = function(opt_includeInstance) {
  return proto.GrpcBranch.BranchReply.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.GrpcBranch.BranchReply} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.GrpcBranch.BranchReply.toObject = function(includeInstance, msg) {
  var f, obj = {
    columnsList: jspb.Message.toObjectList(msg.getColumnsList(),
    proto.GrpcBranch.ColumnMetadata.toObject, includeInstance),
    rowsList: jspb.Message.toObjectList(msg.getRowsList(),
    proto.GrpcBranch.Row.toObject, includeInstance),
    mappingMap: (f = msg.getMappingMap()) ? f.toObject(includeInstance, undefined) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.GrpcBranch.BranchReply}
 */
proto.GrpcBranch.BranchReply.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.GrpcBranch.BranchReply;
  return proto.GrpcBranch.BranchReply.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.GrpcBranch.BranchReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.GrpcBranch.BranchReply}
 */
proto.GrpcBranch.BranchReply.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.GrpcBranch.ColumnMetadata;
      reader.readMessage(value,proto.GrpcBranch.ColumnMetadata.deserializeBinaryFromReader);
      msg.addColumns(value);
      break;
    case 2:
      var value = new proto.GrpcBranch.Row;
      reader.readMessage(value,proto.GrpcBranch.Row.deserializeBinaryFromReader);
      msg.addRows(value);
      break;
    case 3:
      var value = msg.getMappingMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readInt32, jspb.BinaryReader.prototype.readString, null, 0, "");
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.GrpcBranch.BranchReply.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.GrpcBranch.BranchReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.GrpcBranch.BranchReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.GrpcBranch.BranchReply.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getColumnsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.GrpcBranch.ColumnMetadata.serializeBinaryToWriter
    );
  }
  f = message.getRowsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.GrpcBranch.Row.serializeBinaryToWriter
    );
  }
  f = message.getMappingMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(3, writer, jspb.BinaryWriter.prototype.writeInt32, jspb.BinaryWriter.prototype.writeString);
  }
};


/**
 * repeated ColumnMetadata columns = 1;
 * @return {!Array<!proto.GrpcBranch.ColumnMetadata>}
 */
proto.GrpcBranch.BranchReply.prototype.getColumnsList = function() {
  return /** @type{!Array<!proto.GrpcBranch.ColumnMetadata>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.GrpcBranch.ColumnMetadata, 1));
};


/**
 * @param {!Array<!proto.GrpcBranch.ColumnMetadata>} value
 * @return {!proto.GrpcBranch.BranchReply} returns this
*/
proto.GrpcBranch.BranchReply.prototype.setColumnsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.GrpcBranch.ColumnMetadata=} opt_value
 * @param {number=} opt_index
 * @return {!proto.GrpcBranch.ColumnMetadata}
 */
proto.GrpcBranch.BranchReply.prototype.addColumns = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.GrpcBranch.ColumnMetadata, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.GrpcBranch.BranchReply} returns this
 */
proto.GrpcBranch.BranchReply.prototype.clearColumnsList = function() {
  return this.setColumnsList([]);
};


/**
 * repeated Row rows = 2;
 * @return {!Array<!proto.GrpcBranch.Row>}
 */
proto.GrpcBranch.BranchReply.prototype.getRowsList = function() {
  return /** @type{!Array<!proto.GrpcBranch.Row>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.GrpcBranch.Row, 2));
};


/**
 * @param {!Array<!proto.GrpcBranch.Row>} value
 * @return {!proto.GrpcBranch.BranchReply} returns this
*/
proto.GrpcBranch.BranchReply.prototype.setRowsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.GrpcBranch.Row=} opt_value
 * @param {number=} opt_index
 * @return {!proto.GrpcBranch.Row}
 */
proto.GrpcBranch.BranchReply.prototype.addRows = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.GrpcBranch.Row, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.GrpcBranch.BranchReply} returns this
 */
proto.GrpcBranch.BranchReply.prototype.clearRowsList = function() {
  return this.setRowsList([]);
};


/**
 * map<int32, string> mapping = 3;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<number,string>}
 */
proto.GrpcBranch.BranchReply.prototype.getMappingMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<number,string>} */ (
      jspb.Message.getMapField(this, 3, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.GrpcBranch.BranchReply} returns this
 */
proto.GrpcBranch.BranchReply.prototype.clearMappingMap = function() {
  this.getMappingMap().clear();
  return this;};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.GrpcBranch.Row.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.GrpcBranch.Row.prototype.toObject = function(opt_includeInstance) {
  return proto.GrpcBranch.Row.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.GrpcBranch.Row} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.GrpcBranch.Row.toObject = function(includeInstance, msg) {
  var f, obj = {
    dataList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.GrpcBranch.Row}
 */
proto.GrpcBranch.Row.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.GrpcBranch.Row;
  return proto.GrpcBranch.Row.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.GrpcBranch.Row} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.GrpcBranch.Row}
 */
proto.GrpcBranch.Row.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedInt32() : [reader.readInt32()]);
      for (var i = 0; i < values.length; i++) {
        msg.addData(values[i]);
      }
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.GrpcBranch.Row.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.GrpcBranch.Row.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.GrpcBranch.Row} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.GrpcBranch.Row.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDataList();
  if (f.length > 0) {
    writer.writePackedInt32(
      1,
      f
    );
  }
};


/**
 * repeated int32 data = 1;
 * @return {!Array<number>}
 */
proto.GrpcBranch.Row.prototype.getDataList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.GrpcBranch.Row} returns this
 */
proto.GrpcBranch.Row.prototype.setDataList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.GrpcBranch.Row} returns this
 */
proto.GrpcBranch.Row.prototype.addData = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.GrpcBranch.Row} returns this
 */
proto.GrpcBranch.Row.prototype.clearDataList = function() {
  return this.setDataList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.GrpcBranch.FilterModels.prototype.toObject = function(opt_includeInstance) {
  return proto.GrpcBranch.FilterModels.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.GrpcBranch.FilterModels} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.GrpcBranch.FilterModels.toObject = function(includeInstance, msg) {
  var f, obj = {
    filterModelMap: (f = msg.getFilterModelMap()) ? f.toObject(includeInstance, proto.GrpcBranch.FilterEntry.toObject) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.GrpcBranch.FilterModels}
 */
proto.GrpcBranch.FilterModels.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.GrpcBranch.FilterModels;
  return proto.GrpcBranch.FilterModels.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.GrpcBranch.FilterModels} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.GrpcBranch.FilterModels}
 */
proto.GrpcBranch.FilterModels.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = msg.getFilterModelMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.GrpcBranch.FilterEntry.deserializeBinaryFromReader, "", new proto.GrpcBranch.FilterEntry());
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.GrpcBranch.FilterModels.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.GrpcBranch.FilterModels.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.GrpcBranch.FilterModels} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.GrpcBranch.FilterModels.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFilterModelMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(1, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.GrpcBranch.FilterEntry.serializeBinaryToWriter);
  }
};


/**
 * map<string, FilterEntry> filter_model = 1;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.GrpcBranch.FilterEntry>}
 */
proto.GrpcBranch.FilterModels.prototype.getFilterModelMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.GrpcBranch.FilterEntry>} */ (
      jspb.Message.getMapField(this, 1, opt_noLazyCreate,
      proto.GrpcBranch.FilterEntry));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.GrpcBranch.FilterModels} returns this
 */
proto.GrpcBranch.FilterModels.prototype.clearFilterModelMap = function() {
  this.getFilterModelMap().clear();
  return this;};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.GrpcBranch.FilterEntry.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.GrpcBranch.FilterEntry.prototype.toObject = function(opt_includeInstance) {
  return proto.GrpcBranch.FilterEntry.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.GrpcBranch.FilterEntry} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.GrpcBranch.FilterEntry.toObject = function(includeInstance, msg) {
  var f, obj = {
    filterType: jspb.Message.getFieldWithDefault(msg, 1, 0),
    valuesList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f,
    type: jspb.Message.getFieldWithDefault(msg, 3, 0),
    filter: jspb.Message.getFieldWithDefault(msg, 4, ""),
    filterTo: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.GrpcBranch.FilterEntry}
 */
proto.GrpcBranch.FilterEntry.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.GrpcBranch.FilterEntry;
  return proto.GrpcBranch.FilterEntry.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.GrpcBranch.FilterEntry} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.GrpcBranch.FilterEntry}
 */
proto.GrpcBranch.FilterEntry.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.GrpcBranch.FilterType} */ (reader.readEnum());
      msg.setFilterType(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addValues(value);
      break;
    case 3:
      var value = /** @type {!proto.GrpcBranch.FilterOperation} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setFilter(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setFilterTo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.GrpcBranch.FilterEntry.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.GrpcBranch.FilterEntry.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.GrpcBranch.FilterEntry} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.GrpcBranch.FilterEntry.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFilterType();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getValuesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getFilter();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getFilterTo();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional FilterType filter_type = 1;
 * @return {!proto.GrpcBranch.FilterType}
 */
proto.GrpcBranch.FilterEntry.prototype.getFilterType = function() {
  return /** @type {!proto.GrpcBranch.FilterType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.GrpcBranch.FilterType} value
 * @return {!proto.GrpcBranch.FilterEntry} returns this
 */
proto.GrpcBranch.FilterEntry.prototype.setFilterType = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * repeated string values = 2;
 * @return {!Array<string>}
 */
proto.GrpcBranch.FilterEntry.prototype.getValuesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.GrpcBranch.FilterEntry} returns this
 */
proto.GrpcBranch.FilterEntry.prototype.setValuesList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.GrpcBranch.FilterEntry} returns this
 */
proto.GrpcBranch.FilterEntry.prototype.addValues = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.GrpcBranch.FilterEntry} returns this
 */
proto.GrpcBranch.FilterEntry.prototype.clearValuesList = function() {
  return this.setValuesList([]);
};


/**
 * optional FilterOperation type = 3;
 * @return {!proto.GrpcBranch.FilterOperation}
 */
proto.GrpcBranch.FilterEntry.prototype.getType = function() {
  return /** @type {!proto.GrpcBranch.FilterOperation} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.GrpcBranch.FilterOperation} value
 * @return {!proto.GrpcBranch.FilterEntry} returns this
 */
proto.GrpcBranch.FilterEntry.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional string filter = 4;
 * @return {string}
 */
proto.GrpcBranch.FilterEntry.prototype.getFilter = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.GrpcBranch.FilterEntry} returns this
 */
proto.GrpcBranch.FilterEntry.prototype.setFilter = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string filter_to = 5;
 * @return {string}
 */
proto.GrpcBranch.FilterEntry.prototype.getFilterTo = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.GrpcBranch.FilterEntry} returns this
 */
proto.GrpcBranch.FilterEntry.prototype.setFilterTo = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.GrpcBranch.ColumnMetadata.prototype.toObject = function(opt_includeInstance) {
  return proto.GrpcBranch.ColumnMetadata.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.GrpcBranch.ColumnMetadata} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.GrpcBranch.ColumnMetadata.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    ispk: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
    type: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.GrpcBranch.ColumnMetadata}
 */
proto.GrpcBranch.ColumnMetadata.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.GrpcBranch.ColumnMetadata;
  return proto.GrpcBranch.ColumnMetadata.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.GrpcBranch.ColumnMetadata} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.GrpcBranch.ColumnMetadata}
 */
proto.GrpcBranch.ColumnMetadata.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIspk(value);
      break;
    case 3:
      var value = /** @type {!proto.GrpcBranch.ColumnType} */ (reader.readEnum());
      msg.setType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.GrpcBranch.ColumnMetadata.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.GrpcBranch.ColumnMetadata.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.GrpcBranch.ColumnMetadata} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.GrpcBranch.ColumnMetadata.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getIspk();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.GrpcBranch.ColumnMetadata.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.GrpcBranch.ColumnMetadata} returns this
 */
proto.GrpcBranch.ColumnMetadata.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional bool isPk = 2;
 * @return {boolean}
 */
proto.GrpcBranch.ColumnMetadata.prototype.getIspk = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.GrpcBranch.ColumnMetadata} returns this
 */
proto.GrpcBranch.ColumnMetadata.prototype.setIspk = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional ColumnType type = 3;
 * @return {!proto.GrpcBranch.ColumnType}
 */
proto.GrpcBranch.ColumnMetadata.prototype.getType = function() {
  return /** @type {!proto.GrpcBranch.ColumnType} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.GrpcBranch.ColumnType} value
 * @return {!proto.GrpcBranch.ColumnMetadata} returns this
 */
proto.GrpcBranch.ColumnMetadata.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * @enum {number}
 */
proto.GrpcBranch.FilterType = {
  TEXT: 0,
  NUMBER: 1,
  DATE: 2,
  SET: 3
};

/**
 * @enum {number}
 */
proto.GrpcBranch.FilterOperation = {
  CONTAINS: 0,
  GREATERTHAN: 1,
  LESSTHAN: 2,
  EQUALS: 3,
  LESSTHANOREQUAL: 4,
  GREATERTHANOREQUAL: 5,
  INRANGE: 6
};

/**
 * @enum {number}
 */
proto.GrpcBranch.BranchTypes = {
  CAPACITY_ORDER: 0
};

/**
 * @enum {number}
 */
proto.GrpcBranch.BranchLoadType = {
  NEW: 0,
  CACHE: 1,
  RELOAD: 2
};

/**
 * @enum {number}
 */
proto.GrpcBranch.ColumnType = {
  STRING: 0,
  DATETYPE: 1,
  INT: 2,
  DOUBLE: 3
};

goog.object.extend(exports, proto.GrpcBranch);
